{"ast":null,"code":"import { environments } from 'src/environments/environments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthorService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environments.baseURL;\n  }\n  getAuthors() {\n    return this.http.get(`${this.baseUrl}/author`).pipe();\n  }\n  getTitlesByAuthor(author) {\n    console.log(author);\n    return this.http.get(`${this.baseUrl}/author/${author}/title`).pipe();\n  }\n  getBook(tittle) {\n    return this.http.get(`${this.baseUrl}/title/${tittle}`);\n  }\n  static #_ = this.ɵfac = function AuthorService_Factory(t) {\n    return new (t || AuthorService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthorService,\n    factory: AuthorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environments","AuthorService","constructor","http","baseUrl","baseURL","getAuthors","get","pipe","getTitlesByAuthor","author","console","log","getBook","tittle","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/boris/Documentos/Viamtica/pruebas/01pruebaInterna/fronted/pruebaApp/src/app/author/services/author.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environments } from 'src/environments/environments';\nimport { Observable, map } from 'rxjs';\nimport { Author } from '../interfaces/author.interface';\nimport { Title } from '@angular/platform-browser';\nimport { Book, TitleS } from '../interfaces/title.interface';\n\n@Injectable({providedIn: 'root'})\nexport class AuthorService {\n    constructor(private http: HttpClient) { }\n\n    private baseUrl: string = environments.baseURL ;\n\n    getAuthors(): Observable<Author>{\n\n     \n\n        return this.http.get<Author>(`${this.baseUrl}/author`).pipe(\n            \n        );\n\n    }\n    \n\n    getTitlesByAuthor(author: string): Observable<TitleS[]>{\n\n\n        console.log(author)\n        return this.http.get<TitleS[]>(`${this.baseUrl}/author/${author}/title`).pipe(\n           \n        );\n    }\n\n    getBook(tittle: string): Observable<Book[]>{\n\n        return this.http.get<Book[]>(`${this.baseUrl}/title/${tittle}`)\n\n    }\n}"],"mappings":"AAEA,SAASA,YAAY,QAAQ,+BAA+B;;;AAO5D,OAAM,MAAOC,aAAa;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAEhB,KAAAC,OAAO,GAAWJ,YAAY,CAACK,OAAO;EAFN;EAIxCC,UAAUA,CAAA;IAIN,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAS,GAAG,IAAI,CAACH,OAAO,SAAS,CAAC,CAACI,IAAI,EAE1D;EAEL;EAGAC,iBAAiBA,CAACC,MAAc;IAG5BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACH,OAAO,WAAWM,MAAM,QAAQ,CAAC,CAACF,IAAI,EAE5E;EACL;EAEAK,OAAOA,CAACC,MAAc;IAElB,OAAO,IAAI,CAACX,IAAI,CAACI,GAAG,CAAS,GAAG,IAAI,CAACH,OAAO,UAAUU,MAAM,EAAE,CAAC;EAEnE;EAAC,QAAAC,CAAA,G;qBA7BQd,aAAa,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbnB,aAAa;IAAAoB,OAAA,EAAbpB,aAAa,CAAAqB,IAAA;IAAAC,UAAA,EADD;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}