{"ast":null,"code":"import { environments } from 'src/environments/environments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthorService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environments.baseURL;\n    this.localStorageKey = 'favoriteAuthors';\n  }\n  getAuthors() {\n    return this.http.get(`${this.baseUrl}/author`).pipe();\n  }\n  getTitlesByAuthor(author) {\n    console.log(author);\n    return this.http.get(`${this.baseUrl}/author/${author}/title`).pipe();\n  }\n  getBook(tittle) {\n    return this.http.get(`${this.baseUrl}/title/${tittle}`);\n  }\n  getFavoriteAuthors() {\n    if (!localStorage.getItem(this.localStorageKey)) return [];\n    return JSON.parse(localStorage.getItem(this.localStorageKey)) || [];\n  }\n  verificarFavorite(author) {\n    let favoriteAuthors = this.getFavoriteAuthors();\n    if (!favoriteAuthors.includes(author)) return false;\n    return true;\n  }\n  saveFavoriteAuthor(author) {\n    let favoriteAuthors = this.getFavoriteAuthors();\n    if (!favoriteAuthors.includes(author)) {\n      favoriteAuthors.push(author);\n      localStorage.setItem(this.localStorageKey, JSON.stringify(favoriteAuthors));\n    }\n  }\n  removeFavoriteAuthor(author) {\n    let favoriteAuthors = this.getFavoriteAuthors();\n    const index = favoriteAuthors.indexOf(author);\n    if (index !== -1) {\n      favoriteAuthors.splice(index, 1);\n      localStorage.setItem(this.localStorageKey, JSON.stringify(favoriteAuthors));\n    }\n  }\n  getTotalFavorites() {\n    return this.getFavoriteAuthors().length;\n  }\n  static #_ = this.ɵfac = function AuthorService_Factory(t) {\n    return new (t || AuthorService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthorService,\n    factory: AuthorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environments","AuthorService","constructor","http","baseUrl","baseURL","localStorageKey","getAuthors","get","pipe","getTitlesByAuthor","author","console","log","getBook","tittle","getFavoriteAuthors","localStorage","getItem","JSON","parse","verificarFavorite","favoriteAuthors","includes","saveFavoriteAuthor","push","setItem","stringify","removeFavoriteAuthor","index","indexOf","splice","getTotalFavorites","length","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/boris/Documentos/Viamtica/pruebas/01pruebaInterna/fronted/pruebaApp/src/app/author/services/author.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environments } from 'src/environments/environments';\nimport { Observable, map } from 'rxjs';\nimport { Author } from '../interfaces/author.interface';\nimport { Title } from '@angular/platform-browser';\nimport { Book, TitleS } from '../interfaces/title.interface';\n\n@Injectable({providedIn: 'root'})\nexport class AuthorService {\n    constructor(private http: HttpClient) { }\n\n    private baseUrl: string = environments.baseURL ;\n\n    private localStorageKey = 'favoriteAuthors';\n\n    getAuthors(): Observable<Author>{\n\n     \n\n        return this.http.get<Author>(`${this.baseUrl}/author`).pipe(\n            \n        );\n\n    }\n    \n\n    getTitlesByAuthor(author: string): Observable<TitleS[]>{\n\n\n        console.log(author)\n        return this.http.get<TitleS[]>(`${this.baseUrl}/author/${author}/title`).pipe(\n           \n        );\n    }\n\n    getBook(tittle: string): Observable<Book[]>{\n\n        return this.http.get<Book[]>(`${this.baseUrl}/title/${tittle}`)\n\n    }\n\n\n    \n   \n\n    \n    getFavoriteAuthors(): string [] {\n        if(!localStorage.getItem(this.localStorageKey)) return [];\n\n        return JSON.parse (localStorage.getItem(this.localStorageKey)!) || [];\n      }\n\n    verificarFavorite(author: string): boolean {\n        let favoriteAuthors = this.getFavoriteAuthors();\n        if( !favoriteAuthors.includes(author)) return false ; \n        \n       return true ;\n    }\n\n   saveFavoriteAuthor(author: string): void {\n        let favoriteAuthors = this.getFavoriteAuthors();\n        if (!favoriteAuthors.includes(author)) {\n          favoriteAuthors.push(author);\n          localStorage.setItem(this.localStorageKey, JSON.stringify(favoriteAuthors));\n        }\n      }  \n    \n    removeFavoriteAuthor(author: string): void {\n        let favoriteAuthors = this.getFavoriteAuthors();\n        const index = favoriteAuthors.indexOf(author);\n        if (index !== -1) {\n          favoriteAuthors.splice(index, 1);\n          localStorage.setItem(this.localStorageKey, JSON.stringify(favoriteAuthors));\n        }\n      }\n\n      getTotalFavorites(): number {\n        return this.getFavoriteAuthors().length;\n      }\n    \n}"],"mappings":"AAEA,SAASA,YAAY,QAAQ,+BAA+B;;;AAO5D,OAAM,MAAOC,aAAa;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAEhB,KAAAC,OAAO,GAAWJ,YAAY,CAACK,OAAO;IAEtC,KAAAC,eAAe,GAAG,iBAAiB;EAJH;EAMxCC,UAAUA,CAAA;IAIN,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAS,GAAG,IAAI,CAACJ,OAAO,SAAS,CAAC,CAACK,IAAI,EAE1D;EAEL;EAGAC,iBAAiBA,CAACC,MAAc;IAG5BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB,OAAO,IAAI,CAACR,IAAI,CAACK,GAAG,CAAW,GAAG,IAAI,CAACJ,OAAO,WAAWO,MAAM,QAAQ,CAAC,CAACF,IAAI,EAE5E;EACL;EAEAK,OAAOA,CAACC,MAAc;IAElB,OAAO,IAAI,CAACZ,IAAI,CAACK,GAAG,CAAS,GAAG,IAAI,CAACJ,OAAO,UAAUW,MAAM,EAAE,CAAC;EAEnE;EAOAC,kBAAkBA,CAAA;IACd,IAAG,CAACC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACZ,eAAe,CAAC,EAAE,OAAO,EAAE;IAEzD,OAAOa,IAAI,CAACC,KAAK,CAAEH,YAAY,CAACC,OAAO,CAAC,IAAI,CAACZ,eAAe,CAAE,CAAC,IAAI,EAAE;EACvE;EAEFe,iBAAiBA,CAACV,MAAc;IAC5B,IAAIW,eAAe,GAAG,IAAI,CAACN,kBAAkB,EAAE;IAC/C,IAAI,CAACM,eAAe,CAACC,QAAQ,CAACZ,MAAM,CAAC,EAAE,OAAO,KAAK;IAEpD,OAAO,IAAI;EACd;EAEDa,kBAAkBA,CAACb,MAAc;IAC5B,IAAIW,eAAe,GAAG,IAAI,CAACN,kBAAkB,EAAE;IAC/C,IAAI,CAACM,eAAe,CAACC,QAAQ,CAACZ,MAAM,CAAC,EAAE;MACrCW,eAAe,CAACG,IAAI,CAACd,MAAM,CAAC;MAC5BM,YAAY,CAACS,OAAO,CAAC,IAAI,CAACpB,eAAe,EAAEa,IAAI,CAACQ,SAAS,CAACL,eAAe,CAAC,CAAC;;EAE/E;EAEFM,oBAAoBA,CAACjB,MAAc;IAC/B,IAAIW,eAAe,GAAG,IAAI,CAACN,kBAAkB,EAAE;IAC/C,MAAMa,KAAK,GAAGP,eAAe,CAACQ,OAAO,CAACnB,MAAM,CAAC;IAC7C,IAAIkB,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBP,eAAe,CAACS,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAChCZ,YAAY,CAACS,OAAO,CAAC,IAAI,CAACpB,eAAe,EAAEa,IAAI,CAACQ,SAAS,CAACL,eAAe,CAAC,CAAC;;EAE/E;EAEAU,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAAChB,kBAAkB,EAAE,CAACiB,MAAM;EACzC;EAAC,QAAAC,CAAA,G;qBAtEMjC,aAAa,EAAAkC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbtC,aAAa;IAAAuC,OAAA,EAAbvC,aAAa,CAAAwC,IAAA;IAAAC,UAAA,EADD;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}